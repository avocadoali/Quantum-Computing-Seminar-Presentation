#+TITLE: Notes_presentation

1. Engineering:
   Linear equations are extensively used in engineering disciplines such as civil engineering, electrical engineering, mechanical engineering, and chemical engineering. They are employed in areas like circuit analysis, structural analysis, control systems, fluid dynamics, and optimization of engineering designs.

2. Physics: Linear equations are fundamental in physics, particularly in classical mechanics, electromagnetism, quantum mechanics, and thermodynamics. They help describe the behavior of physical systems, model interactions between particles, analyze wave propagation, and study dynamic systems.

3. Economics and Finance: Linear equations find application in economics and finance for modeling and analyzing economic systems, investment portfolios, pricing models, optimization of resource allocation, and studying market trends.

4. Computer Science and Data Analysis: Linear equations play a crucial role in computer science algorithms, especially in areas like machine learning, data analysis, computer graphics, and computer simulations. They are used for tasks such as regression analysis, image processing, pattern recognition, and optimization algorithms.

5. Operations Research: Linear equations are extensively used in operations research for modeling and solving optimization problems in supply chain management, logistics, transportation, scheduling, resource allocation, and production planning.

6. Statistics: Linear equations are employed in statistical analysis, including linear regression models, linear mixed models, and general linear models. They are used to analyze relationships between variables, estimate parameters, and make predictions.

7. Natural Sciences: Linear equations find applications in various branches of natural sciences, including chemistry, biology, environmental science, and geology. They are used to model chemical reactions, population dynamics, ecological systems, climate models, and geological processes.

8. Social Sciences: Linear equations are utilized in social sciences for modeling and analyzing social systems, survey data analysis, econometric models, and social network analysis.

These domains represent just a few examples where linear equations are fundamental. In reality, linear equations find application in a wide range of fields, highlighting their significance in solving complex problems across various disciplines.


* Hermitian



M_{hermitian} =

\begin{pmatrix}
0 & M \\
M^\dagger & 0
\end{pmatrix}




* Encoding

U = e^{iAt}


\begin{bmatrix}
c_0 \\
c_1
\end{bmatrix}




\begin{bmatrix}
0 \\
3
\end{bmatrix}


\begin{bmatrix}
00 \\
11
\end{bmatrix}

= \ket{0011}








* Math background

** Spectral decomposition

A =  U D U^{\dagger}
=

\begin{bmatrix}
    U_1 &
    U_2 &
    ...&
    U_n
\end{bmatrix}

\begin{bmatrix}
    \lambda_1 & 0 & 0 & 0\\
     0 & \lambda_2 &0 & 0\\
     0 & 0 & ... & 0\\
     0 & 0 & 0& \lambda_n \\
\end{bmatrix}

\begin{bmatrix}
    U^\dagger_1 \\
    U^\dagger_2 \\
    ...\\
    U^\dagger_n
\end{bmatrix}

** Dot product
\vec{v} \dot \vec{v} = |\vec{v}| |\vec{v}| \cos{\delta}  = 0
\vec{v} \dot \vec{v} = |\vec{v}| |\vec{v}| \cos{\delta}  = 0


\vec{v}| = \sqrt{\vec{v}^2_x \cdot \vec{v}^2_y}  = \sqrt{\vec{v}\cdot \vec{v}}


\sqrt{\bra{\phi}\ket{\phi}}
\bra{\psi}\ket{\phi} = 0


A^{-1}
=  U D^{-1} U^{\dagger}
=
U^\dagger
\begin{bmatrix}
    \lambda_1^{-1} & 0 & 0 & 0\\
    0 & \lambda_2^{-1} &0 & 0\\
    0 & 0 & ... & 0\\
    0 & 0 & 0& \lambda_n^{-1} \\
\end{bmatrix} U
=
\begin{bmatrix}
    \lambda_1^{-1} U^\dagger_1 &
    \lambda_2^{-1} U^\dagger_2 &
    ...&
    \lambda_n^{-1} U^\dagger_n &
\end{bmatrix}
U

*** Orthonormal basis
\braket{E_i|E_i} = 1
\braket{E_i|E_i} = 0 , i\neq j



* Entagled state
\ket{\Phi_1} = \frac{1}{\sqrt{2}} ( \ket{10} + \ket{11}) \\ = \ket{1}\otimes \frac{1}{\sqrt{2}} ( \ket{0} + \ket{1})\\
= \ket{1} \ket{+}

\ket{\Phi_2} = \frac{1}{\sqrt{2}} ( \ket{00} + \ket{11})

* Ancilla roation
= | Ψ_9⟩ = \ket{b} | \widetilde{λ}_j⟩ \frac 1 {\lambda^{-1}} |1⟩_a |



* IQPE
| Ψ_9⟩ =
\frac{1}{2}\sqrt{\frac{2}{5}}
\left( |0⟩ + 3|1⟩
\right) |00⟩ | 1⟩
= | Ψ_9⟩ = \left(\frac{1}{2}\sqrt{\frac{2}{5}}| 0⟩
+\frac{1}{2}\sqrt{\frac{2}{5}} * 3 | 1⟩ \right)|00⟩ | 1⟩





* randome


 \ket{+} = H \ket{0}
 = \frac 1{ \sqrt 2}\ket{0} + \frac 1{ \sqrt 2} \ket{1}=
 = \frac 1{ \sqrt 2} \left(\ket{0} - \ket{1}\right)=


 \ket{-} = H \ket{1}
 = \frac 1{ \sqrt 2}\ket{0} - \frac 1{ \sqrt 2} \ket{1}=
 = \frac 1{ \sqrt 2} \left(\ket{0} - \ket{1}\right)=




- Importance of solving linear equations
  - Optimization
  - Machine Learning
  - Cryptography
  - Scientific Computing
  - Simulating Quantum Systems
- What does the HHL Algorithm Promise?
- potential advantages over classical computers


We now Rotate the ancilla qubit:
$$ |Ψ_5⟩ = \sum_{j=0}^{2^{1}−1} b_j |u_j⟩ | \widetilde{λ}_j⟩ (\sqrt{1-\frac{C^2}{\widetilde{λ}_j^2}}|0⟩ + \frac{C}{\widetilde{λ}_j} |1⟩) \\ =-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩\left(\sqrt{1-\frac{1}{1^2}}|0⟩ + \frac{1}{1} |1⟩\right) +\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\sqrt{1-\frac{1}{2^2}}|0⟩ + \frac{1}{2} |1⟩\right)$$

Lets say we measure $\ket{1}$ in the ancilla qubit, then:
$$ |Ψ_6⟩ =\sqrt{\frac{8}{5}}\left(-\frac{1}{\sqrt{2}}|u_0⟩|01⟩|1⟩ +\frac{1}{2\sqrt{2}}|u_1⟩ |10⟩ |1⟩\right) $$


* Easy example




**INIT**



A = \begin{pmatrix}
1 & -\frac{1}{3}\\
-\frac{1}{3} & 1\\
\end{pmatrix}


\vec{u_1} = \begin{pmatrix}
 \frac{-1}{\sqrt{2}}\\
 \frac{1}{\sqrt{2}}\\
\end{pmatrix}

\vec{u_0} = \begin{pmatrix}
 \frac{-1}{\sqrt{2}}\\
 \frac{-1}{\sqrt{2}}\\
\end{pmatrix}


λ_0 = \frac{2}{3}
λ_1 = \frac{4}{3}

\widetilde{λ_0} =\frac{4*\frac{2}{3}*\frac{3\pi}{4}}{2 \pi}
=\frac{4*2*3\pi}{3*4* 2 \pi} = 1



\widetilde{λ_1} =\frac{4*\frac{4}{3}*\frac{3\pi}{4}}{2 \pi}
=\frac{4*4*3\pi}{3*4* 2 \pi} = 1

4\frac{2}{3}/2π

\vec{x} = \begin{pmatrix}
 \frac{3}{8}\\
 \frac{9}{8}\\
\end{pmatrix}

| x_0|^2 = \frac{9}{64}
|x_1|^2 = \frac{81}{64}


\frac{ |x_0|^2}{ |x_1|^2}=
\frac{\frac{9}{64}}{\frac{81}{64}} = \frac{1}{9}



= log_2(2^n)

 Ψ_0⟩ = |0⟩_b  |00⟩_n  |0⟩_a =  |0000⟩



\vec{b} =
\begin{pmatrix}
 0\\
 1\\
\end{pmatrix}
<=>
\ket{b} =
0 \ket{0} 1 \ket{1} = \ket{1}

|
Ψ2⟩ = I ⊗ H^{⊗n} ⊗ I |Ψ1⟩
Ψ3⟩ = \frac{1} {2 \sqrt{2}} ((− |u0⟩ + |u1⟩) |00⟩ + (−i |u0⟩ − |u1⟩) |01⟩ + (|u0⟩ + |u1⟩) |10⟩ + (i |u0⟩ − |u1⟩) |11⟩) |0⟩

Ψ4⟩ = IQFT |Ψ3⟩
\\= \frac{1}{4\sqrt{2}}
\left(
    \left(− |u_0⟩ + |u_1⟩\right)
    \left(|00⟩ + |01⟩ + |10⟩ + |11⟩\right)
\\
    + \left(−i |u_0⟩ − |u_1⟩\right)
    \left(|00⟩ − i |01⟩ − |10⟩ + i |11⟩\right)
\\
    + \left(|u_0⟩ + |u_1⟩\right)
    \left(|00⟩ − |01⟩ + |10⟩ − |11⟩\right)
\\

    + \left(i |u_0⟩ − |u_1⟩\right)
    \left(|00⟩ + i |01⟩ − |10⟩ − i |11⟩\right)
\right)|0⟩

|Ψ_5⟩ =
\sum_{j=0}^{2^{1}−1} b_j |u_j⟩ | \widetilde{λ}_j⟩ (\sqrt{1-\frac{C^2}{\widetilde{λ}_j^2}}|0⟩ + \frac{C}{\widetilde{λ}_j} |1⟩) \\ =


-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩\left(\sqrt{1-\frac{1}{1^2}}|0⟩ + \frac{1}{1} |1⟩\right) +\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\sqrt{1-\frac{1}{2^2}}|0⟩ + \frac{1}{2} |1⟩\right)

=-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩\left(\sqrt{0}|0⟩ + \frac{1}{1} |1⟩\right)
+\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\sqrt{1-\frac{1}{4}}|0⟩ + \frac{1}{2} |1⟩\right)


\\=-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩\left(|0⟩ +|1⟩\right)
+\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\sqrt{1-\frac{1}{4}}\ |0⟩ + \frac{1}{2} |1⟩\right)

\\=-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩(|1⟩)+\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\frac{1}{2}|1⟩\right)


\ket{x} =  A^{-1} \ket{b}
\\=


\sum_{i=0}^{2^{1}-1}
\lambda_i^{-1} b_i\ket{u_i}
\\=  -\frac{1}{\frac{2}{3}\sqrt{2}}|u_0⟩ +\frac{1}   {\frac{4}{3}\sqrt{2}} |u_1⟩


\\= \lambda_0^{-1} b_0\ |u_0⟩ +  \lambda_1^{-1} b_1\ket{u_1}
\\=  -\frac{1}{\frac{2}{3}\sqrt{2}}|u_0⟩ +\frac{1}   {\frac{4}{3}\sqrt{2}} |u_1⟩




**QPE**

Ψ4⟩ = IQFT |Ψ3⟩ \\= \frac{1}{4\sqrt{2}} \left(\left(− |u_0⟩ + |u_1⟩\right) \left(|00⟩ + |01⟩ + |10⟩ + |11⟩\right) \\ + \left(−i |u_0⟩ − |u_1⟩\right) \left(|00⟩ − i |01⟩ − |10⟩ + i |11⟩\right) \\ + \left(|u_0⟩ + |u_1⟩\right) \left(|00⟩ − |01⟩ + |10⟩ − |11⟩\right) \\ + \left(i |u_0⟩ − |u_1⟩\right) \left(|00⟩ + i |01⟩ − |10⟩ − i |11⟩\right) \right)|0⟩

=\frac{1}{\sqrt{2}}(− |u_0⟩ |01⟩ + |u_1⟩ |10⟩) |0⟩

= |Ψ_4⟩=\left(−\frac{1}{\sqrt{2}} |u_0⟩ |01⟩ +\frac{1}{\sqrt{2}}  |u_1⟩ |10⟩\right) |0⟩


$$b_0 =\frac{-1}{\sqrt{2}}
$$b_1 =\frac{1}{\sqrt{2}}



= |Ψ_4⟩=\left(−\frac{1}{\sqrt{2}} |u_0⟩ |\widetilde{λ}_0⟩ +\frac{1}{\sqrt{2}}  |u_1⟩ |\widetilde{λ}_1⟩ \right) |0⟩



−1
√
2
and b1 =
1
√
2.


It can be seen that after IQFT, the eigenvalues are
encoded in the clock qubits as |01⟩ and |11⟩ with non-
zero amplitudes due constructive interference. b_0 = \frac{−1}{\sqrt{2}}
and b_1 = \frac{1}{\sqrt{2}}. We clearly see the entanglement between
the b-register and the c-register that |u0⟩ goes with |01⟩
and |u1⟩ goes with |11⟩.

c-register: |u_0⟩ or |u_1⟩
b-register encode the eigenvalues: |01⟩ or |10⟩
ancillary qubit: |0⟩

We can cleary see entanglement here:
-|u_0⟩ |01⟩ and |u1⟩|10⟩


**Ancilla**

|Ψ5⟩ =
\sum_{j=0}^{2^{1}−1}
b_j |u_j⟩ | \widetilde{λ}_j⟩
(\sqrt{1-\frac{C^2}{\widetilde{λ}_j^2}}|0⟩ + \frac{C}{\widetilde{λ}_j} |1⟩)

=-\frac{1}{\sqrt{2}}|u_0⟩ |01⟩\left(\sqrt{1-\frac{1}{1^2}}|0⟩ + \frac{1}{1} |1⟩\right) +\frac{1}{\sqrt{2}}|u_1⟩ |10⟩ \left(\sqrt{1-\frac{1}{2^2}}|0⟩ + \frac{1}{2} |1⟩\right)

=\frac{-1}{\sqrt{2}}|u_1⟩ |10⟩) |0⟩
b_j |u_j⟩ | \widetilde{λ}_j⟩
(\sqrt{1-\frac{C^2}{\widetilde{λ}_j^2}}|0⟩ + \frac{C}{\widetilde{λ}_j} |1⟩)

|Ψ6⟩ =
=\sqrt{\frac{8}{5}}\left(-\frac{1}{\sqrt{2}}|u_0⟩|01⟩|1⟩ +\frac{1}{2\sqrt{2}}|u_1⟩ |10⟩ |1⟩\right)

**IPQE**

| Ψ_9⟩ =
=\frac{2}{3}\sqrt{\frac{8}{5}}
\left(
    -\frac{1}{\frac{2}{3}\sqrt{2}}|u_0⟩ +\frac{1}{\frac{4}{3}\sqrt{2}} |u_1⟩
\right) |00⟩ | 1⟩

$$|u_0⟩ = \frac{-1}{\sqrt{2}}|0⟩ + \frac{-1}{\sqrt{2}}|1⟩$$
$$|u_1⟩ = \frac{-1}{\sqrt{2}}|0⟩ + \frac{1}{\sqrt{2}}|1⟩$$

c_{|u_0⟩}=\left|\frac{1}{2}\sqrt{\frac{2}{5}}*1\right|^2 = \frac{1}{20}
c_{|u_1⟩}=\left|\frac{1}{2}\sqrt{\frac{2}{5}}*3\right|^2 = \frac{9}{20}
| Ψ_9⟩ =
\frac{1}{2}\sqrt{\frac{2}{5}}
\left( |0⟩ + 3|1⟩
\right) |00⟩ | 1⟩
The probability ratio of obtaining |0⟩ and |1⟩ when
b-register is measured is thus 1 : 9 as expected




* The algorithm

|Ψ9⟩ =
\frac {1} {\sqrt{\sum_{j=0}^{2^{n_b}−1} | \frac{b_j} {\widetilde{λ}_j}|2}}
 \frac{b_j} {λ_j}
|u_j⟩ |0⟩^{⊗n} |1⟩_a
\\ =

\frac {1} {\sqrt{\sum_{j=0}^{2^{n_b}−1} | \frac{b_j} {\widetilde{λ}_j}|2}}
Meaning we need 1 qubit to represent b⃗b
| x⟩_b | 0⟩^{⊗n}_c | 1⟩_a

|Ψ9⟩ =
\frac {1} {\sqrt{\sum_{j=0}^{2^{n_b}−1} | \frac{b_jC} {\widetilde{λ}_j}|2}}
\sum_{j=0}^{2^{n_b}−1} \frac{bjC} {λj} |uj⟩ |0⟩^{⊗n} |1⟩_a
=
\frac {C} {\sqrt{\sum_{j=0}^{2^{n_b}−1} | \frac{b_jC} {\widetilde{λ}_j}|2}}
| x⟩_b | 0⟩^{⊗n} | 1⟩_a |

|x⟩b |0⟩⊗n
c
|1⟩a

|Ψ6⟩ =
\frac {1} {\sqrt{\sum_{j=0}^{2^{n_b}−1} | \frac{b_jC} {\widetilde{λ}_j}|2}}
\sum_{j=0}^{2^{n_b}−1} b_j |u_j⟩ | \widetilde{λ}_j⟩ \frac{C}{\widetilde{λ}_j} |1⟩_a

\sum_{j=0}^{2^{n_b}−1}
b_j |u_j⟩ | \widetilde{λ}_j⟩ |0⟩_a

\sum_{j=0}^{2^{n_b}−1}
| λ^{−1}_i b_i | ^2 = 1 |


|Ψ_4⟩ =\sum_{j=0}^{2^{n_b}−1}
b_j |u_j⟩ | \widetilde{λ}_j⟩ |0⟩_a
|Ψ5⟩ =

\sum_{j=0}^{2^{n_b}−1}
bj |uj⟩ | \widetilde{λ}_j⟩
(\sqrt{1-\frac{C^2}{\widetilde{λ}_j^2⟩}}|0⟩_a + \frac{C}{\widetilde{λ}_j} |1⟩_a)


State Preperation
Quantum Phase Estimation
Ancilla Bit Rotation - add auxiliary qubit
Inverse Quantum Phase Estimation
Measurement

Measury auxiliary Qubit
Apply observabel M to calculate F(x):= <x|M|x>
* Todo
- Is list complete?
- Work out all the points
- ....
- Make the presentation



* Sub points
** The Algorithm
- Input Preparation:
  - Specify the input of the algorithm, which includes the coefficient matrix A, the right-hand side vector b, and the desired precision for the solution.
- Quantum State Preparation:
  - Prepare an initial quantum state that encodes the information of the input vector b. This step typically involves applying suitable quantum gates to initialize the quantum register.
- Quantum Phase Estimation (QPE):
  - Perform the quantum phase estimation procedure to estimate the eigenvalues of the matrix A. QPE utilizes controlled operations and quantum Fourier transforms to extract the eigenvalue information.
- Eigenvalue Inversion:
  - Invert the estimated eigenvalues obtained from the QPE step. This inversion is performed classically by manipulating the classical register.
- Conditional Rotation:
  - Apply conditional rotations based on the inverted eigenvalues to modify the quantum state. This step allows for the extraction of information about the solution of the linear system.
- Measurement and Post-processing:
  - Perform measurements on the quantum register to obtain the desired solution. The post-processing step involves classical computations and calculations using the measurement outcomes to obtain the final solution vector.



* Structure

1) QC introduction Motivation of the HHL Algorithm
   - Short QC introduction
     - potential advantages over classical computers
   - Importance of solving linear equations
     - Optimization
     - Machine Learning
     - Cryptography
     - Scientific Computing
     - Simulating Quantum Systems

2) Short mathematical/qc background
   - Quantum state preparation and measurement (What, How?)
   - Hermetian Matrix (What, How?)
   - QPE (What?, How?)
   - How do gates work?

3) The Algorithm
   Load data
   Apply QPE
   Add auxiliary qubit
   Apply $QPE^t$
   Measury auxiliary Qubit
   Apply observabel $M$ to calculate $F(x):= <x|M|x>$.


   - Load data
   - Apply QPE
   - Add auxiliary qubit
   - Apply $QPE^t$
   - Measury auxiliary Qubit
   - Apply observabel $M$ to calculate $F(x):= <x|M|x>$.

4) Simple Example of the HHL Algorithm
   - Qiskit

5) Advantages/Limitations of HHL
   - Physical Prerequisits
   - Mathematical advantages
   - Error correction?
   - Runtime advantage

6) Practical Applications of the HHl Algorithm
   - Physical Prerequisits
   - Mathematical advantages
   - Error correction?
   - Runtime advantage
   - It-sec
   - Ml

7) Sources

* GPT Structure 2)
1. Introduction:
   - Start with a brief introduction to quantum computing, highlighting its fundamental principles and potential advantages over classical computing for certain problems.
   - Explain the importance of solving systems of linear equations in various fields and how it relates to computer science and computational mathematics.

2. Background on Quantum Computing:
   - Provide a concise overview of quantum computing, including quantum bits (qubits), superposition, entanglement, and quantum gates.
   - Explain how quantum algorithms differ from classical algorithms and how they can achieve exponential speedup for certain tasks.

3. Motivation for the HHL Algorithm:
   - Discuss the limitations of classical methods for solving linear systems and their implications for various applications.
   - Highlight the need for efficient solutions and the potential impact of quantum computing on solving linear systems more effectively.

4. Principles of the HHL Algorithm:
   - Explain the key concepts and techniques used in the HHL algorithm, such as quantum phase estimation, linear system encoding, and quantum measurement.
   - Provide intuitive explanations and step-by-step demonstrations of how these components contribute to solving linear systems.

5. Prerequisites for Implementing the HHL Algorithm:
   - Discuss the requirements for implementing the HHL algorithm, such as the need for a quantum computer and specific quantum gates.
   - Explain the importance of error correction and maintaining quantum coherence for accurate results.

6. Advantages and Limitations of the HHL Algorithm:
   - Highlight the advantages of the HHL algorithm over classical methods, such as potential exponential speedup and its impact on optimization, machine learning, and cryptography.
   - Discuss the current limitations of the algorithm, such as noise sensitivity and the requirement for a large number of qubits.

7. Example and Applications:
   - Provide a step-by-step example of the HHL algorithm, using a simplified linear system, to illustrate how it works in practice.
   - Explore real-world applications and use cases where the HHL algorithm can be applied, such as simulating quantum systems, optimizing financial portfolios, or solving large-scale optimization problems.

8. Future Directions and Open Challenges:
   - Discuss the ongoing research in improving the efficiency and scalability of the HHL algorithm.
   - Highlight open challenges, such as developing error correction techniques and addressing hardware limitations, and how they impact the adoption of the algorithm in real-world scenarios.

9. Conclusion:
   - Recap the main points covered in the presentation, emphasizing the significance of the HHL algorithm in the context of quantum computing and its potential impact on various fields.
   - Encourage further exploration of the topic and highlight the importance of keeping up with advancements in quantum computing for computer science students.

* GPT Structure 1)
1. What is the motivation behind the HHL algorithm?
   - Start by explaining why the HHL (Harrow-Hassidim-Lloyd) algorithm was developed and what problems it aims to solve.
   - Highlight the potential impact of the algorithm in various fields, such as solving systems of linear equations efficiently, which has applications in areas like optimization, machine learning, and cryptography.

2. How does the HHL algorithm work at a high level?
   - Explain the basic steps of the algorithm, providing an overview of the key concepts and techniques involved.
   - Discuss the key components, such as quantum phase estimation, linear system encoding, and quantum measurement.

3. What are the prerequisites for implementing the HHL algorithm?
   - Discuss the requirements for using the HHL algorithm, such as the need for a quantum computer and certain quantum gates (e.g., controlled rotations) to perform the necessary operations.
   - Mention the importance of error correction and quantum coherence to ensure accurate results.

4. What are the advantages and limitations of the HHL algorithm?
   - Highlight the advantages of the HHL algorithm compared to classical methods for solving linear systems, such as its potential for exponential speedup.
   - Discuss the current limitations of the algorithm, such as the sensitivity to noise and the requirement for a large number of qubits.

5. Can you provide a step-by-step example of the HHL algorithm?
   - Walk through a simplified example of the HHL algorithm, explaining each step in detail.
   - Use a simple linear system of equations to demonstrate how the algorithm works and how it can be implemented.

6. What are some current research and practical applications of the HHL algorithm?
   - Discuss the ongoing research in improving the efficiency and scalability of the algorithm.
   - Explore real-world applications where the HHL algorithm can be utilized, such as simulating quantum systems, optimizing financial portfolios, or solving large-scale optimization problems.


* Questions to be answered

- Where do you need matrix multiplication?
- Why do you need this algorithm
- How fast are current algorithms
- How does the algorithm work?
- Walk through a simplyfied example
- Constraints of the algorithm
- Physical prerequisits of the algorithm

- What are further applications (It-security/Machine Learning)

Classical Algorithms
- Overview of how fast matrix multiplication is performed on classical computer
- Str


* Sources

Rough overview:
https://www.youtube.com/watch?v=KtIPAPyaPOg

Qiskit:
https://learn.qiskit.org/course/ch-applications/solving-linear-systems-of-equations-using-hhl-and-its-qiskit-implementation


* GPT prompts

I am a college student, studying computer science. for the remainder of this conversation I want you to respond from a high school teachers point of view. When I ask you a question , I don't only want you to give me the answer, but I want you to clearly explain step by step, how you found that answer. Occasionally ask if I understand everything and if there is anything that we have discussed that I want to readdress.

I have to prepared a presentation about the HHL algorithm in Quantum Computing. I need you to help me with that. What are questions that have to be answered for such a presentation

The presentation is done at the academic chair of it security. How can I relate the HHL algorithm the connection to It security
